<actions>

<meta>
  <description>Template für Bibliotheca Plus/OPEN</description>
  <variable name="urlaccount"><description>Vollständige URL der Seite für den Kontozugriff</description></variable>
  <variable name="urlsearch"><description>Vollständige URL der Seite für die erweiterte Suche</description></variable>
<!--  <variable name="DB" default=""><description>Datenbank</description></variable>-->
</meta>

<action id="connect"></action>
<action id="internal-login">
  <page url="{$urlaccount}">
    <template><form>{
      loginForm := form(., {"__EVENTTARGET": (//input[contains(@name, "cmdLogin")])[1]/@name, 
                           (//input[contains(@name, "Username")])[1]/@name: $username, 
                           (//input[contains(@name, "txtPassword")],
                            //input[contains(@name, "password")])[1]/@name: $password  })
    }</form></template>
  </page>
</action>
<!--

}
function __doPostBack(eventTarget, eventArgument) {
    if (!theForm.onsubmit || (theForm.onsubmit() != false)) {
        theForm.__EVENTTARGET.value = eventTarget;
        theForm.__EVENTARGUMENT.value = eventArgument;
        theForm.submit();
    }
}-->

<action id="update-all">
  <call action="internal-login"/>
  <page url="{$loginForm}"><template><html>{
    for $message in //div[contains(@id, "Login_UP")]//span[contains(@id, "lblMessage")] return vl:raise-login(normalize-space($message))
  }</html></template></page>
  <page url="{$urlaccount}" templateFile="list"/>
</action>

<action id="update-single"> <!--todo: parallize? -->
  <page url="{$extendableCheck}" test="exists($book._copyId)">
    <header>Accept: application/json, text/javascript, */*; q=0.01</header>
    <header>Content-Type: application/json;charset=utf-8</header>
    <header>X-Requested-With: XMLHttpRequest</header>
    <post>{{'portalId':'{$portalId}', 'userName': '{$username}', 'copyId': '{$book._copyId}', 'culture':'{$culture}', 'localResourceFile':'{$localResourceFile}'}}</post>
    <template><t:s>
      let $d := json($raw).d return
        if ($d.IsExtendable) then (book.statusId := "normal")
        else (book.status := $d.StatusMessages, book.statusId := "critical")
    </t:s></template> <!-- answer looks like: {"d":{"__type":"OCLC.OPEN.PL.DNN.PatronAccountModule.PatronAccountService+ExtendableResponse","IsExtendable":false,"StatusMessages":"(Verlängerungsintervall ist auf 0 Tage eingestellt) Bitte wenden Sie sich an die Bibliothek."}}-->
  </page>
<!-- on the webpage:
            var copyId = $(this).find('input[name$="CopyId"]').attr('value');
            var culture = regC.find('input[name$="Culture"]').attr('value');
            var regChk = $('.checkboxRegion:has(input[name$="CopyIdChx"][value="' + copyId + '"])')
            var chk = regChk.find('input[name$="chkSelect"]');
            $.ajax({ type: "POST", url: "/DesktopModules/OCLC.OPEN.PL.DNN.PatronAccountModule/PatronAccountService.asmx/IsCatalogueCopyExtendable", contentType: "application/json;charset=utf-8", dataType: "json",
                data: "{'portalId':'1', 'userName':'----username---', 'copyId':'" + copyId + "', 'culture':'" + culture + "', 'localResourceFile':'/DesktopModules/OCLC.OPEN.PL.DNN.PatronAccountModule/App_LocalResources/NormalView'}",
-->
</action>



<action id="renew-list">
  <s>form := form-combine($user-form, ($renew-books  ! {(.)._renewid: "on"}, $renew-button) ) </s>
  <page url="{$form}"> <!-- this returns all of update-all list again-->
    <template><form>{
      let $target := (.//input/@name/string()[contains(., 'ucLoansView') or contains(., 'loansExtensionPopup$btnDefault')])[1]
      let $argument := if (contains($target, "ucLoansView")) then "CommitCatalogueCopiesExtensionEventArgs" else ""
      return (
       confirm-form := form(., {'__EVENTTARGET': $target, "__EVENTARGUMENT": $argument } )
     )}</form></template>
  </page>
  <page url="{$confirm-form}"/> <!-- this returns all of update-all list again-->
  <call action="update-all"/>
</action>

<action id="cancel-list"> <!-- this is murks -->
  <if test="$cancel-books[(.).statusId eq 'ordered']">
    <s>form := form-combine($user-form, ($cancel-books[(.).statusId eq 'ordered'] ! {(.)._cancelid: "on"}, $cancel-ordered-button) ) </s>
    <page url="{$form}" templateFile="list"/> <!-- this returns all of update-all list again, but we only need the user-form (other stuff is irrelevant?)-->
  </if>
  <if test="$cancel-books[(.).statusId eq 'provided']">
    <s>form := form-combine($user-form, ($cancel-books[(.).statusId eq 'provided'] ! {(.)._cancelid: "on"}, $cancel-provided-button) ) </s>
    <page url="{$form}"  templateFile="list"/> <!-- this returns all of update-all list again-->
    <!--    <call action="update-all"/> does not do anything??-->
  </if>
</action>


-->



<action id="gotopage">
  <loop test="$current-page > $target-page">
    <s>$current-page := $current-page - 1</s>
    <page url="{$prev-page}" templateFile="searchListHeaderOnly"/>
  </loop>

  <loop test="$current-page < $target-page and $target-page <= $last-visited-page">
    <s>$current-page := $current-page + 1</s>
    <page url="{$next-page}" templateFile="searchListHeaderOnly"/>
  </loop>
  
  <loop test="$current-page < $target-page">
    <s>$current-page := $current-page + 1, $last-visited-page := $current-page</s>
    <page url="{$next-page}" templateFile="searchList"/>
  </loop>  
</action>

<action id="search-connect">
  <s>loggedIn := false()</s>
 <!-- <page url="{$baseurl}/index.asp?DB={get('DB', 'OPAC')}">    
    <template><form name="webopac">{profi := form(., {"link_profis.x": 10, "link_profis.y": 10})}</form></template>
  </page>
  <page url="{$profi}">    
    <template><form name="webopac">{search := form(.)}</form></template>
  </page>-->
</action>

<action id="search">
    <page url="{$urlsearch}"><template><form>{
      search-form := form(., .//input[contains(@name, "BtnSearch")]), 
      search-fields := .//select[contains(@name, "SearchField")],
      search-values := .//input[contains(@name, "SearchValue")],
      search-year-values := .//input[contains(@name, "Year")]
    }</form></template></page>
    
    <s>   current-page := 1, last-visited-page := 1, next-page := (), i := 1,
          search-keys := {"title": "Title", "author": "Author", "keywords": "Keyword", "isbn": "ISBNandISSN"},
          search-reverse-keys := {"Publisher": "publisher", "ProductionYear": "year", "Author": "author", "IsbnTitle": "isbn", "1stIsbnTitle": "isbn"},
          startSearch := form-combine($search-form, {|
            $search-year-values ! { @name: $book.year },
            (
              for $key in jn:keys($book) return if (boolean($book($key)) and exists($search-keys($key)) and $i le count($search-fields) ) then (
                      {($search-fields[$i]/@name) : $search-keys($key), ($search-values[$i]/@name) :  $book($key)},
                      ($i := $i + 1)[0]
                    ) else ()
            )
          |})
    </s>
    <page url="{$startSearch}" templateFile="searchList"/>
</action>

<action id="search-next-page">
  <s>$target-page := $last-visited-page + 1</s>
  <call action="gotopage"/>
</action>

<action id="internal-gotobookpage">
  <s>target-page := $book._page</s>
  <call action="gotopage"/>
  <s>combined-detail-form := if (starts-with($book._detailId, "http")) then $book._detailId else form-combine($form, {'__EVENTTARGET': $book._detailId})</s>
  <page url="{$combined-detail-form}" templateFile="searchDetails"/>
  <page url="{$book._volumeFirst}" templateFile="searchDetails"/>
</action>

<action id="search-details">
  <!--<s>temp := if (not(exists($next-page))) then () 
             else if (contains($book._detailsBackScroll, "scrollAction=")) then $book._detailsBackScroll
             else $book._detailsBackScroll || "?scrollAction=1"
  </s>
  <page url="{$temp}"/>-->
  <call action="internal-gotobookpage"/>
</action>

<action id="order-single"> 
  <if test="not(get('loggedIn', false()))">
    <s>urlaccount := $loginlink</s> <!-- need to use login form from search page, tp  -->
    <call action="internal-login"/>
    <page url="{$loginForm}" templateFile="searchListHeaderOnly"/>
<!--    <s>temp := if (matches($loginlink, "returnurl=")) then uri-decode(extract($loginlink, "returnurl=(.*)", 1)) else $loginForm</s>-->
    <page url="{$loginForm}" templateFile="searchListHeaderOnly"/>
    <s>loggedIn := true()</s>
  </if>
  <s>need-reserve-request-target := (get("holding",())[1]("_orderTarget"), $book._orderTarget)[.]</s>
  <call action="internal-gotobookpage"/>
  <s>need-reserve-request-target := ()</s>
  <page urL="{$reserve-request}"><template>
    <t:switch prioritized="true">
      <form><t:element t:condition='matches(@name||@id, "btnSave|btnConfirm", "i")'>{$input}</t:element>{$form := form(., $input)}</form>
      <div t:condition='matches(@id, "dnnSkinMessage|DivWaring")'>{vl:raise(.)}</div>
    </t:switch>
  </template></page>
 <page urL="{$form}"/>
</action> 



<action id="catalogue">
  <variable name="url" value="{$urlaccount}"/>
</action>
</actions>

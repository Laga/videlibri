<template:switch-prioritized>
  <html>
    <template:meta default-text-matching="regex"/>
    { declare function local:img-to-status($img){
        switch (extract($img/@src, "verfu_(.*)[.](gif|png)", 1))
          case "ja" return "available"
          case "nein" return "lend"
          case "info" return "virtual"
          default return "unknown"
      };
    
      (id("R06"), id("R03"))!string()[matches(., "(Gesucht|Treffer).*:")][1]!
        ( let $temp := extract(., "(([0-9]+)[^0-9]+([0-9]+)[^0-9]+)?([0-9]+)$", (2,4)) return ( 
             $firstIndex := number($temp[1]),
             (:$lastIndex := number($temp[2]),:)
             $search-result-count := xs:integer($temp[2]))
        ),
      lastSearchedIndex := get("lastSearchedIndex", 0) (: for unittests :)
    } 
        <span class="txtinsert" t:test="empty(get('gotDetails_GoBackPage',()))">Trefferliste</span>
        
        <div class="toolbar_div"><ul class="toolbar_ul"><li class="toolbar_li">
          <span>Vorwärts</span>
          {search-next-page-available := not(./input/@disabled),
           form := form(//form) 
           
          }
        </li></ul></div>
        
 
        <DIV id="R07">
          <t:switch>
            <DIV class="rTable_div">
              <TABLE class="rTable_table"> 
               <!--{firstIndex := tbody/tr[1]/td[1] * 1}-->
                <thead/>
                <TR>
                  <TD>{lastIndex := if (. castable as xs:integer) then xs:integer(.) else get("lastIndex", 1) }</TD>
                  <t:if test="$lastIndex > $lastSearchedIndex">
                    <TD/><TD/> <!-id, checkbox, kind--> 
                    <TD>
                      <A>{
                        
                           book := {
                             "title": extract(., "^[^/]+"), 
                             "author": extract(., "^[^/]+/([^-]+)", 1), 
                             "publisher": extract(., "-([^-]+)$", 1),
                             "_searchId": encode-for-uri(concat("ZTEXT       ", extract(@href, "\('(.*)'\)", 1))),
                             "_index": $lastIndex
                           }

                      }</A>
                      <A>Volltext<t:read var="book.Volltext!" source="x'Volltext ( {@href} )'"/></A>?
                    </TD>
                    <!-- td sometimes signature -->
                    <TD><img>{book.statusId := local:img-to-status(.) }</img></td> 
                    <TD>{book.year := ., lastSearchedIndex := $lastIndex}</TD>
                  </t:if>
                </TR>*
              </TABLE>
            </DIV>
            
            <div class="rList_wrapper"> <ul class="rList">
              <li>
              <!--<span class="rList_cover"/>-->
              
              {
                let $props := .//div[contains(@class, "rList_")]
                return (
                  lastIndex := xs:integer($props[contains(@class, "rList_num") or contains(@class, "r_list_name" (:ulm only:) )][matches(., "^[0-9]+\s*$")][1] ),
                  if ($lastIndex > $lastSearchedIndex) then (
                    lastSearchedIndex := $lastIndex,
                    let $title := $props[contains(@class, "rList_titel")][1],
                        $year  := $props[contains(@class, "rList_jahr")][1],
                        $name  := $props[contains(@class, "rList_name")][1],
                        $ava   := $props[contains(@class, "rList_availability")]//img[1]
                    return (book := {
                        "title": $title,
                        "_searchId": encode-for-uri(concat("ZTEXT       ", extract($title//a/@href, "\('(.*)'\)", 1))),
                        "_index": $lastIndex
                      }, 
                      $year ! ($book.year := .),
                      $name ! (
                        let $temp := tokenize(., "-")!normalize-space(),
                                             $year := $temp[last()][. castable as xs:integer],
                                             $autpubcount := count($temp) - (if (exists($year)) then (1, $book.year := $year)[1] else 0)
                                         return switch ($autpubcount) 
                                           case 0 return ()
                                           case 1 return $book.author := $temp[1]
                                           default return (
                                             $book.author := $temp[1],
                                             $book.publisher := $temp[$autpubcount]
                                           )
                      ),
                    $ava ! ($book.statusId := local:img-to-status(.))
                    ) 
                  ) else ()
                )
              } 
            </li>+</ul></div>
          </t:switch>
      </DIV>
       
  </html>

  <h1>Ihre Suche erzielte keinen Treffer<t:s>search-result-count :=  0</t:s></h1>
  <h1>Ihre Suche im Verbund erzielte keinen Treffer<t:s>search-result-count :=  0</t:s></h1>  
  
  <h1>Die Person wurde nicht gefunden<t:s>search-result-count :=  0</t:s></h1>  

  <html>  
    <form>
      <span class="txtinsert">Vollanzeige</span>

      <t:switch-prioritized>
        <input title="Zurück zur Trefferliste">{backButtonName := uri-encode(@name)}</input>
        <input t:condition="contains(@title, 'zur Trefferliste')">{backButtonName := uri-encode(@name)}</input>
      </t:switch-prioritized> 
      
      {gotDetails_GoBackPage := form(.),
       gotDetails_GoBackPage.post := x"{$gotDetails_GoBackPage.post}&{$backButtonName}.x=0&{$backButtonName}.y=0"
      }    
    </form>
  </html>
  
  <body>  
    <div id="main">
      <div class="inside">
        <div class="block">
          <div class="message">
            <div id="R01">
              <h1>{vl:raise(.)}</h1>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>
  
</template:switch-prioritized>


<actions>

<meta>
  <description>Template das PICA-System mit LBS zum Benutzerkontozugriff, üblicherweise von den GBV Bibliotheken verwendet</description>
  <variable name="server"><description>Serveraddresse, inklusive Protokoll und Parameter (z.B.: http://katalog.uni-hildesheim.de)  </description></variable>
  <variable name="picadb" default="1"><description>Datenbanknummer, wenn mehrere Datenbanken auf demselben Server liegen</description></variable>    
  <variable name="searchKeysOverride" default="tit;prs;isb;jah;slw"><description>Abkürzungen der Suchschlüssel bei Katalogsuchen</description></variable>
</meta>


<action id="connect">
  <s>loggedIn := false()</s>
</action>

<action id="internal-login">
  <if test="not($loggedIn)">
    <s>follow1 := (), follow2 := ()</s>
    <page url="{$server}/LBS_WEB/borrower/borrower.htm?USR={1000 + get('picadb', 1)}&BES={get('picadb', 1)}&LAN=DU">
      <template>
<DIV id="main_wrapper"><t:s>vl:delete-current-books()</t:s>
  <FORM>{follow1 := form(., {"j_username": $username, "j_password": $password})}</FORM>
</DIV>

      </template>
    </page>

  <page url="{$follow1}">
    <template>
<t:switch-prioritized>
    <FORM class="topbox">
      <DIV class="tabbar">
        <DIV class="navlink">
          <A><t:s>updateUrl := @href,vl:delete-current-books()</t:s>Entleihungen</A> <!-- todo: this is not called on second update -->
        </DIV>
        <DIV class="navlink">
          <A>{reservationsUrl := @href}</A>
        </DIV>
      </DIV>
    </FORM>


	<h2><font color="red">{vl:raise(.)}<!--Benutzernummer und/oder Passwort ist falsch.--></font></h2>
</t:switch-prioritized>

    </template>
  </page>

    <s>loggedIn := true()</s>
  </if>
</action>

<action id="update-all">
  <call action="internal-login"/>
  

  <page url="{if (string-length($updateUrl) > 3) then $updateUrl else ()}" templateFile="list"/>
  <page url="{if (string-length($reservationsUrl) > 3) then $reservationsUrl else ()}" templateFile="listOrders"/>
</action>

<action id="renew-list">  
  <s>renew := form-combine($renew-form, for $book in $renew-books return {"volumeNumbersToRenew": $book.renewId})</s>
  
  <page url="{$renew}"/>

  <call action="update-all"/>
</action>

<action id="cancel-list">  
  <s>cancel := form-combine($cancel-form, for $book in $cancel-books return {"volumeReservationsToCancel": $book.cancelId})</s>
  
  <page url="{$cancel}"/>

  <call action="update-all"/>
</action>










<action id="search-connect">
  <variable name="db" value="DB={get('picadb', 1)}"/>
  <variable name="loanServer" value="{$server}/loan/{$db}/LNG=DU/HTML=Y/"/>

</action>

<action id="search">
  
  <variable name="searchKeys">
  tokenize(get("searchKeysOverride", "tit;prs;isb;jah;slw"), ";")
  </variable>
  
  <variable name="searchOptions">
  encode-for-uri( string-join(
    (if ($book.title != "")    then concat($searchKeys[1], " ", $book.title)    else (),
     if ($book.author != "")   then concat($searchKeys[2], " ", $book.author)   else (),
     if ($book.isbn != "")     then concat($searchKeys[3], " ", $book.isbn)     else (),
     if ($book.year != "")     then concat($searchKeys[4], " ", $book.year)     else (),
     if ($book.keywords != "") then concat($searchKeys[5], " ", $book.keywords) else ()), "&amp;"))
  </variable>


  <page url="{$server}/{$db}/HTML=Y/CMD?ACT=SRCHA&IKT=1016&SRT=RLV&TRM={$searchOptions}" templateFile="searchList"></page>
  
  <page test="$singleResult" url="{$server}/{$db}/CMD?ACT=SRCHA&IKT=1016&SRT=RLV&TRM={$searchOptions}" templateFile="searchDetails"></page>
  
  <variable name="search-next-page-available">$nextPage</variable>
</action>

<action id="search-next-page">
  <page url="{$nextPage}" templateFile="searchList"></page>

  <variable name="search-next-page-available">$nextPage</variable>
</action>


<action id="search-details">
  <page url="{$book.home-url}" templateFile="searchDetails"></page>
</action>


</actions>
